---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Cards.astro";

const API_URL_CAT = "http://localhost:1337/api/categories?populate=books";
const API_URL = "http://localhost:1337/api/books";

const responseCat = await fetch(API_URL_CAT);
const dataCat = await responseCat.json();
const cats = dataCat.data;

// const responseAll = await fetch(API_URL);
// const dataAll = await responseAll.json();
// const all = dataAll.data;

// Default category and books initialization
let selectedCategory = cats[0];
let books = selectedCategory.books;
---

<Layout>
  <section>
    <h2>Books</h2>

    <div class="categories">
      <!-- "All" button to show all books -->
      <button class="categories__catBtn" id="allBtn">All</button>
      {cats.map((cat) => (
        <button
          class="categories__catBtn"
          data-category-id={cat.documentId}
        >
          {cat.name}
        </button>
      ))}
    </div>

    

    <div class="card-container" id="card-container">
      <!-- Books will be inserted here by JS -->
    </div>
  </section>

  <script type="module" client:load>
    const API_URL_CAT = "http://localhost:1337/api/categories";
    const API_URL = "http://localhost:1337/api/books";
    const cardContainer = document.getElementById("card-container");

    // Fetch and display all books by default when the page loads
    document.addEventListener("DOMContentLoaded", async () => {
      const responseAll = await fetch(API_URL);
      const dataAll = await responseAll.json();
      const allBooks = dataAll.data || [];

      // Clear the container and render all books
      renderBooks(allBooks);
    });

    // Function to render books
    function renderBooks(books) {
      cardContainer.innerHTML = ""; // Clear existing books
      books.forEach((book) => {
        const card = document.createElement("div");
        card.classList.add("card");
        card.innerHTML = `
          <div class="card__image">
            <img
              src="http://localhost:1337/uploads/${book.slug}.jpg"
              alt="${book.title || "No title"}"
            />
          </div>
          <div class="card_txt">
            <h3>${book.title || "No title"}</h3>
          </div>
          <div class="card__content">
            <p class="card__price">&euro; ${book.price || "No Price"}</p>
            <button>Read More</button>
          </div>
        `;
        cardContainer.appendChild(card);
      });
    }

    // Now handle category buttons
    const categoryButtons = document.querySelectorAll(".categories__catBtn");

    categoryButtons.forEach((button) => {
      button.addEventListener("click", async (event) => {
        const categoryId = event.target.getAttribute("data-category-id");

        if (categoryId) {
          // Fetch books for the selected category
          const response = await fetch(`${API_URL_CAT}/${categoryId}?populate=books`);
          const data = await response.json();
          const books = data.data.books || [];

          // Render the selected category's books
          renderBooks(books);
        } else {
          // If the "All" button is clicked
          const responseAll = await fetch(API_URL);
          const dataAll = await responseAll.json();
          const allBooks = dataAll.data || [];

          // Render all books again
          renderBooks(allBooks);
        }
      });
    });
  </script>
</Layout>

<style>
  .categories {
    display: flex;
    justify-content: space-between;
  }

  .categories__catBtn {
    padding: 1rem 2rem;
    background-color: var(--c-green);
    cursor: pointer;
    transition: background-color 0.2s;
    margin-bottom: 10px;
  }

  .categories__catBtn:hover {
    background-color: var(--c-darkgreen);
    color: white;
  }

  .card-container {
    margin-top: 20px;
  }

  .card {
    padding: 10px;
    border: 1px solid #ddd;
    margin-bottom: 10px;
  }
</style>

